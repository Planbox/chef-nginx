user                  <%= node["nginx"]["user"] %> <%= node["nginx"]["user"] %>;
worker_processes      <%= node["nginx"]["worker_proc"] %>;
worker_rlimit_nofile  <%= node["nginx"]["worker_rlimit"] %>;
pid                   <%= node["nginx"]["pid_path"] %>/nginx.pid;

events {
  worker_connections  <%= node["nginx"]["worker_conn"] %>;
}

http {
  # Mime types
  include       conf.d/mimetypes;
  default_type  <%= node["nginx"]["default_type"] %>;

  # Buffer overflows
  include       conf.d/buffer;

  # Timeouts
  include       conf.d/timeout;

  # Connection limits
  include       conf.d/limit;

  # Gzip compression
  include       conf.d/gzip;

  # Logging
  include       conf.d/logformats;
  access_log    <%= node["nginx"]["log_path"] %>/access.log global;
  error_log     <%= node["nginx"]["log_path"] %>/error.log;

  # Defaults
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
  server_tokens off;


  # Default response
  server {
<% node["nginx"]["listen"].each do |interface| -%>
    listen  <%= interface %>;
<% end-%>

<% if (node["nginx"]["block_referral_spam"]) -%>
    # Block referral spam
    if ($http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen)) {
      return  403;
    }
<% end -%>

    # This is a default response for an uncofigured domain, use sites-available/enabled
    location / {
      return  403;
    }
  }

  # Enabled sites
  include       sites-enabled/*;
}
